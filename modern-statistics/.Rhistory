c(length(incomes),length(states))
# create minimum income df
df <- data.frame(states,incomes)
# modify number to numberic - factor to numeric messes things up. Needs to be converted
# to character first
df$incomes <- as.numeric(as.character(df$incomes))
df
stem(df)
stem(df$incomes)
stem(df$incomes,width = 2000)
stem(df$incomes,width = 3000)
stem(df$incomes,scale = 3000)
stem(df$incomes
stem(df$incomes)
stem(df$incomes)
?stem
stem(df$incomes)
stem(df$incomes, scale=2)
unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' ')
)
as.numeric(
unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' ')
)
)
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
body_fat_percentages
install.packages("ggplot2", dependencies = T)
install.packages("ggplot2", dependencies = T)
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
breaks <- seq(0,43,by=1)
body_fat_percentages.cut <- cut(body_fat_percentages,
breaks = breaks,
right = F)
body_fat_percentages.freq <- table(body_fat_percentages.cut)
body_fat_percentages.freq
body_fat_percentages
body_fat_percentages.cut
body_fat_percentages.cut
?table
body_fat_percentages.freq
body_fat_percentages.cumfreq <- cumsum(body_fat_percentages.freq)
body_fat_percentages.cumfreq
?cbind
cbind(body_fat_percentages.cumfreq)
data.frame(body_fat_percentages.cumfreq)
body_fat_percentages.df <- data.frame(body_fat_percentages.cumfreq)
body_fat_percentages.df
colnames(body_fat_percentages.df)
install.packages('tidyverse', dependencies = T)
breaks <- seq(0,43,by=1)
body_fat_percentages.cut <- cut(body_fat_percentages,
breaks = breaks,
right = F)
body_fat_percentages.freq <- table(body_fat_percentages.cut)
body_fat_percentages.cumfreq <- cumsum(body_fat_percentages.freq)
body_fat_percentages.df <- data.frame(body_fat_percentages.cumfreq)
body_fat_percentages.df
colnames(body_fat_percentages.df)
install.packages('tidyverse', dependencies = T)
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
body_fat_percentages.freq <- table(body_fat_percentages.cut)
breaks <- seq(0,43,by=1)
body_fat_percentages.cut <- cut(body_fat_percentages,
breaks = breaks,
right = F)
body_fat_percentages.freq <- table(body_fat_percentages.cut)
body_fat_percentages.cumfreq <- cumsum(body_fat_percentages.freq)
body_fat_percentages.df <- data.frame(body_fat_percentages.cumfreq)
body_fat_percentages.df
colnames(body_fat_percentages.df)
body_fat_percentages.df
colnames(body_fat_percentages.df)
body_fat_percentages.df
body_fat_percentages.df$body_fat_percentages.cumfreq
sum(body_fat_percentages.df$body_fat_percentages.cumfreq)
colnames(body_fat_percentages.df)
colnames(body_fat_percentages.df)
names(body_fat_percentages.df)
?names
?colnames
names(body_fat_percentages.df)
names(body_fat_percentages.df)[names(body_fat_percentages.df)=="body_fat_percentages.cumfreq"] <- "cum_freq"
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
body_fat_percentages.df <- data.frame(
cumsum(
table(
cut(x = body_fat_percentages, breaks = seq(0,43,by=1))
)
)
)
View(body_fat_percentages.df)
View(body_fat_percentages.df)
body_fat_percentages.df <- data.frame(
cumsum(
table(
cut(x = body_fat_percentages, breaks = seq(0,43,by=1), right=F)
)
)
)
body_fat_percentages.df
names(body_fat_percentages.df)
names(body_fat_percentages.df)[0]
names(body_fat_percentages.df)[1]
names(body_fat_percentages.df)[1] <- "cum_freq"
body_fat_percentages.df
body_fat_percentages.df$rel_cum_freq = body_fat_percentages.df$cum_freq / sum(body_fat_percentages.df$cum_freq)
body_fat_percentages.df
body_fat_percentages.df$rel_cum_freq = body_fat_percentages.df$cum_freq / length(body_fat_percentages)
tages.df
body_fat_percentages.df
install.packages('ggplot2')
install.packages('ggplot2', dependencies = T)
install.packages('tidyverse', dependencies = T)
# plotting relative cumulative frequency
library(ggplot2)
index(body_fat_percentages.df)
body_fat_percentages.df.index
names(body_fat_percentages.df)
rownames(body_fat_percentages.df)
cbind(rownames(body_fat_percentages.df),body_fat_percentages.df)
# extract row names to column
body_fat_percentages.df <- cbind(rownames(body_fat_percentages.df), body_fat_percentages.df)
body_fat_percentages.df
#reset row names
rownames(body_fat_percentages.df)<- NULL
body_fat_percentages.df
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
# create a cumulative frequency dataframe
body_fat_percentages.df <- data.frame(
cumsum(
table(
cut(x = body_fat_percentages, breaks = seq(0,43,by=1), right=F)
)
)
)
# extract row names to column
body_fat_percentages.df <- cbind(rownames(body_fat_percentages.df), body_fat_percentages.df)
#reset row names
rownames(body_fat_percentages.df)<- NULL
# change column name
names(body_fat_percentages.df)[1] <- "cum_freq"
body_fat_percentages.df$rel_cum_freq = body_fat_percentages.df$cum_freq / length(body_fat_percentages)
body_fat_percentages.df
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
# create a cumulative frequency dataframe
body_fat_percentages.df <- data.frame(
cumsum(
table(
cut(x = body_fat_percentages, breaks = seq(0,43,by=1), right=F)
)
)
)
# extract row names to column
body_fat_percentages.df <- cbind(rownames(body_fat_percentages.df), body_fat_percentages.df)
#reset row names
rownames(body_fat_percentages.df)<- NULL
# change column name
names(body_fat_percentages.df)[1] <- "cum_freq"
body_fat_percentages.df$rel_cum_freq = body_fat_percentages.df$cum_freq / length(body_fat_percentages)
summarise(body_fat_percentages)
describe(body_fat_percentages)
summary(body_fat_percentages)
summary(body_fat_percentages.df)
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
# create a cumulative frequency dataframe
body_fat_percentages.df <- data.frame(
cumsum(
table(
cut(x = body_fat_percentages, breaks = seq(0,43,by=1), right=F)
)
)
)
body_fat_percentages.df
# extract row names to column
body_fat_percentages.df <- cbind(rownames(body_fat_percentages.df), body_fat_percentages.df)
body_fat_percentages.df
#reset row names
rownames(body_fat_percentages.df)<- NULL
body_fat_percentages.df
# change column name
names(body_fat_percentages.df)[2] <- "cum_freq"
body_fat_percentages.df
body_fat_percentages.df$rel_cum_freq = body_fat_percentages.df$cum_freq / length(body_fat_percentages)
body_fat_percentages.df
# plotting relative cumulative frequency
library(ggplot2)
c("J.M. Argyle (170), D.A. Booth (101), O.J. Braddick (83), T.G.R. Bower (85), M. Coltheart (164), S.J. Cooper (82), H.J. Eysenck (813), M.W. Eysenck (90), S.B.G. Eysenck (91), A.F. Furnham (62), H. Giles (70), J.A. Gray (251), D.N. Lee (84), N.J. Mackintosh (176), T.W. Robbins (69), E.T. Rolls (61), J. Sandler (97), H.R. Schaffer (67), C.B. Trevarthan (73), M.R. Trimble (97), P.H. Venables (68), P.B. Warr (120), E.K. Warrington (180), L. Weiskranz (64), G.D. Wilson (84), W. Yule (60)")
a <- 3
rm(a)
library(ggplot2)
library(tidyverse)
library(gridExtra)
citations_text <-
c("J.M. Argyle (170), D.A. Booth (101), O.J. Braddick (83), T.G.R. Bower (85), M. Coltheart (164), S.J. Cooper (82), H.J. Eysenck (813), M.W. Eysenck (90), S.B.G. Eysenck (91), A.F. Furnham (62), H. Giles (70), J.A. Gray (251), D.N. Lee (84), N.J. Mackintosh (176), T.W. Robbins (69), E.T. Rolls (61), J. Sandler (97), H.R. Schaffer (67), C.B. Trevarthan (73), M.R. Trimble (97), P.H. Venables (68), P.B. Warr (120), E.K. Warrington (180), L. Weiskranz (64), G.D. Wilson (84), W. Yule (60)")
strsplit(citations_text, ',')
citations <- unlist(strsplit(
"J.M. Argyle (170), D.A. Booth (101), O.J. Braddick (83), T.G.R. Bower (85), M. Coltheart (164), S.J. Cooper (82), H.J. Eysenck (813), M.W. Eysenck (90), S.B.G. Eysenck (91), A.F. Furnham (62), H. Giles (70), J.A. Gray (251), D.N. Lee (84), N.J. Mackintosh (176), T.W. Robbins (69), E.T. Rolls (61), J. Sandler (97), H.R. Schaffer (67), C.B. Trevarthan (73), M.R. Trimble (97), P.H. Venables (68), P.B. Warr (120), E.K. Warrington (180), L. Weiskranz (64), G.D. Wilson (84), W. Yule (60)", ','))
rm(citations_text)
as.numeric(gsub("([0-9]+).*$", "\\1", citations))
gsub("([0-9]+).*$", "\\1", citations)
?gsub
as.numeric(gsub("([0-9]+).*$", "abc", citations))
(gsub("([0-9]+).*$", "abc", citations))
(grep("([0-9]+).*$", "abc", citations))
?gsub
(grep("([0-9]+).*$", "abc", citations))
(grepl("([0-9]+).*$", "abc", citations))
(gregexpr("([0-9]+).*$", "abc", citations))
(sub("([0-9]+).*$", "abc", citations))
(sub("([0-9]+).*$", "\\1", citations))
(gsub("~([0-9]+).*$", "\\1", citations))
(gsub("([0-9]+).*$", "\\1", citations))
gsub("([0-9]+).*$", "\\1", citations)
gsub(".*?([0-9]+).*$", "\\1", citations)
gsub(".*?([0-9]+).*", "\\1", citations)
as.numeric(gsub(".*?([0-9]+).*", "\\1", citations))
as.character(gsub(".*?([a-z]+).*", "\\1", citations)))
as.character(gsub(".*?([a-z]+).*", "\\1", citations))
as.character(gsub(".*?([A-Za-z]+).*", "\\1", citations))
as.character(gsub(".*?([A-Z+ a-z]+).*", "\\1", citations))
as.character(gsub(".*?([a-z]+).*", "\\1", citations))
as.numeric(gsub(".*?([^0-9]+).*", "\\1", citations))
(gsub(".*?([^0-9]+).*", "\\1", citations))
(gsub(".*?([^0-9\(]+).*", "\\1", citations))
(gsub(".*?([^0-9(]+).*", "\\1", citations))
(gsub(".*?([^0-9(\t\n\r\v\f]+).*", "\\1", citations))
(gsub(".*?([^0-9(\t\n\r\v\f\s]+).*", "\\1", citations))
(gsub(".*?([^0-9(\t\n\r\v\f]+).*", "\\1", citations))
(gsub(".*?([^0-9(]+).*", "\\1", citations))
str_trim(gsub(".*?([^0-9(]+).*", "\\1", citations))
citations <- as.numeric(gsub(".*?([0-9]+).*", "\\1", citations))
member <- str_trim(gsub(".*?([^0-9(]+).*", "\\1", citations))
member
gsub(".*?([^0-9(]+).*", "\\1", citations)
gsub(".*?([^0-9(]+).*", "\\1", citations)
gsub(".*?([^0-9(]+).*", "\\1", citations)
gsub(".*?([^0-9(]+).*", "\\1", citations)
gsub(".*?([^0-9(]+).*", "\\1", citations)
gsub(".*?([^0-9(]+).*", "\\1", citations)
gsub(".*?([^0-9(]+).*", "\\1", citations)
citations <- unlist(strsplit(
"J.M. Argyle (170), D.A. Booth (101), O.J. Braddick (83), T.G.R. Bower (85), M. Coltheart (164), S.J. Cooper (82), H.J. Eysenck (813), M.W. Eysenck (90), S.B.G. Eysenck (91), A.F. Furnham (62), H. Giles (70), J.A. Gray (251), D.N. Lee (84), N.J. Mackintosh (176), T.W. Robbins (69), E.T. Rolls (61), J. Sandler (97), H.R. Schaffer (67), C.B. Trevarthan (73), M.R. Trimble (97), P.H. Venables (68), P.B. Warr (120), E.K. Warrington (180), L. Weiskranz (64), G.D. Wilson (84), W. Yule (60)", ','))
no_citations <- as.numeric(gsub(".*?([0-9]+).*", "\\1", citations))
no_citations <- as.numeric(gsub(".*?([0-9]+).*", "\\1", citations))
member <- str_trim(gsub(".*?([^0-9(]+).*", "\\1", citations))
member
df <- data.frame(member, citations)
ggplot(df) +
aes(x = member, y = no_citations) +
geom_bar()
ggplot(df) +
aes(x = member, y = no_citations) +
geom_bar(stat = "identity")
ggplot(df) +
aes(x = member, y = no_citations) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))
ggplot(df) +
aes(x = member, y = no_citations) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90))
ggplot(df) +
aes(x = member, y = no_citations) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member), y = no_citations) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, value), y = no_citations) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, no_citations), y = no_citations) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black", fill="charcoal") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black", fill="gunmetal") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black", fill="grey") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "white") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "red") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations") + title("Title")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations") + ggtitle("Title")
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations") +
ggtitle("Number of Citations by Researcher")
library(ggplot2)
library(tidyverse)
library(gridExtra)
# extract data from PDF
c1<-'Alabama Alaska Arizona Arkansas California Colorado Connect. Delaware D.C.
Florida Georgia Hawaii Idaho Illinois Indiana Iowa Kansas'
c1v<-'13,679 21,173 15,881 12,984 19,740 17,494 24,604 19,116 23,436 17,694 16,
188 18,306 13,762 18,858 16,005 15,524 16,182'
c2<-'Kentucky Louisiana Maine Maryland Mass. Michigan Minn. Miss. Missouri
Montana Nebraska Nevada N.Hamps. N.Jersey N.Mexico N.York N.Carolina'
c2v<-'13,777 13,041 16,310 21,020 22,196 17,745 17,746 11,835 16,431 13,852
15,360 18,827 20,251 23,764 13,191 20,540 15,221'
c3<-'N.Dakota Ohio Oklahoma Oregon Penn. RhodeIs. S.Carolina S.Dakota
Tennessee Texas Utah Vermont Virginia Wash. W.Virginia Wisconsin Wyoming'
c3v<-'13,261 16,499 14,151 15,785 17,422 18,061 13,616 13,244 14,765 15,483
13,027 16,399 18,970 17,640 12,529 16,759 14,135'
# create lists of states
incomes <- c(unlist(strsplit(gsub(',','',c1v),' ')),
unlist(strsplit(gsub(',','',c2v),' ')),
unlist(strsplit(gsub(',','',c3v),' ')))
states <- c(unlist(strsplit(c1,' ')),unlist(strsplit(c2,' ')),
unlist(strsplit(c3,' ')))
c(length(incomes),length(states))
# create minimum income df
df <- data.frame(states,incomes)
# modify number to numberic - factor to numeric messes things up. Needs to be
# converted
# to character first
df$incomes <- as.numeric(as.character(df$incomes))
df
stem(df$incomes, scale=2)
?stem
# create list of body fat percentages
body_fat_percentages <-
as.numeric(unlist(
strsplit('7.8 9.5 17.8 25.2 25.9 27.4 27.9 29.1 30.3 31.1 31.4 32.5 33.0 33.8 34.5 34.7 41.1 42.0',' '))
)
length(body_fat_percentages)
# create a cumulative frequency dataframe
body_fat_percentages.df <- data.frame(
cumsum(
table(
cut(x = body_fat_percentages, breaks = seq(0,43,by=1), right=F)
)
)
)
# extract row names to column
body_fat_percentages.df$body_fat <- rownames(body_fat_percentages.df)
# remove default row names
rownames(body_fat_percentages.df) <- NULL
# change column name
names(body_fat_percentages.df)[names(body_fat_percentages.df)!="body_fat"] <-
"cum_freq"
# calculate cumulative relative frequency
body_fat_percentages.df$rel_cum_freq = body_fat_percentages.df$cum_freq / length(body_fat_percentages)
# reorder columns
body_fat_percentages.df <-
body_fat_percentages.df[c("body_fat","cum_freq","rel_cum_freq")]
# transform body_fat bins to factor and arrange by order
body_fat_percentages.df$body_fat <- factor(body_fat_percentages.df$body_fat,
levels = body_fat_percentages.df$
body_fat)
body_fat_percentages.df
# plotting relative cumulative frequency
ggplot(data = body_fat_percentages.df) +
aes(x = body_fat, y = rel_cum_freq, group =1) +
geom_line() +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Body Fat") +
ylab("Cumulative Relative Frequency")
so2 <- c(10, 13, 12, 17, 56, 36, 29, 14, 10, 24, 110, 28, 17, 8, 30, 9, 47, 35,
29, 14, 56, 14, 11, 46, 11, 23, 65, 26, 69, 61, 94, 10, 18, 9, 10, 28,
31, 26, 29, 31, 16)
length(so2)
stem(so2, scale = 2)
Males = c(120,	107,	110,	116,	114,	111,	113,	117,	114,	112)
Females = c(110,	111,	107,	108,	110,	105,	107,	106,	111,	111)
gender <- c(rep("M",each=length(Males)),rep("F",each=length(Females)))
mand_len <- c(Males,Females)
df <- data.frame(gender,mand_len)
summary(df)
ggplot(df) +
aes(x=mand_len) +
geom_histogram(binwidth=2, colour='black', fill='white', ) +
scale_x_continuous(breaks = seq(100,130,1), limits = c(100,130)) +
theme(axis.text.x=element_text(angle = 90))
ggplot(df) +
aes(y=mand_len, x=gender) +
geom_boxplot() +
xlab("Gender") +
ylab("Mandible Length")
# create data frame
RS <- as.numeric(unlist(strsplit("12.8 21.6 14.8 23.1 34.6 19.7 22.6 29.6 16.4 20.3 29.3 14.9 27.3 22.4 27.5 20.3 38.7 26.4 23.7 26.1 29.5 38.6 44.4 23.2 23.6", " ")))
SS <- as.numeric(unlist(strsplit("38.4 32.9 48.5 20.9 11.6 22.3 30.2 33.4 26.7 39.0 12.8 14.6 12.2 23.1 29.4 16.0 20.1 23.3 22.9 22.5 15.1 31.0 16.9 16.1 10.8", " ")))
NS <- as.numeric(unlist(strsplit("35.4 27.4 19.3 41.8 20.3 37.6 36.9 37.3 28.2 23.4 33.7 29.2 41.7 22.6 40.4 34.4 30.4 14.9 51.8 33.8 37.9 29.5 42.4 36.6 47.4", " ")))
per_diem_fec <- c(RS,SS,NS)
gen_line <- factor(c(rep("RS", each=length(RS)),rep("SS", each=length(SS)),
rep("NS", each=length(SS))),levels = c("RS","SS","NS"))
df <- data.frame(gen_line, per_diem_fec)
# draw boxplots
ggplot(df) +
aes(x=gen_line, y=per_diem_fec) +
geom_boxplot()
response <- c("complete response","partial response", "no change",
"disease progression")
res_count <- c(57,110,32,74)
ggplot(data.frame(response, res_count)) +
aes(y=res_count, x=response) +
geom_bar(stat = "identity", colour = "black")
Crime = c("Arson", "Rape", "Violence", "Stealing", "Coining", "Fraud")
Drinker = c(50, 88, 155, 379, 18, 63)
Absteiner = c(43, 62, 110, 300, 14, 144)
# Simple Pie Chart
par(mfrow=c(1,2) ) # 1 row and 3 columns for plots
pie(Drinker, labels = Crime, main="Drinker Proportions")
pie(Absteiner, labels = Crime, main = "Absteiner Proportions")
before <- c(6.6, 4.4, 8.4, 7.2, 17.4, 5.2, 9.0, 4.6, 6.6, 4.4, 8.4)
after <- c(24.0, 30.0, 20.2, 37.0, 46.2, 15.6, 20.9, 25.0, 24.0, 30.0, 20.2)
collapsed <- c(177.0, 160.0, 71.2, 66.0, 414.0, 107.6, 83.0, 122.0, 177.0,
160.0,71.2)
outcome <- factor(c(rep('before', each=length(before)),
rep('after', each=length(after)),
rep('collapsed', each=length(collapsed))),
levels = c('before','after','collapsed'))
beta_endorphin <- c(before, after, collapsed)
df <- data.frame(outcome, beta_endorphin)
plt <- ggplot(df) + aes(x = outcome, y = beta_endorphin) + geom_boxplot() +
xlab("Race Outcome") + ylab("Beta Endorphin (pmol/litre)")
grid.arrange(plt, plt + scale_y_log10(), ncol=2)
salaries <- c(85, 70, 50, 35, 42, 30, 70, 77, 67, 42, 45, 45, 45, 45)
stem(salaries, scale = 2)
citations <- unlist(strsplit(
"J.M. Argyle (170), D.A. Booth (101), O.J. Braddick (83), T.G.R. Bower (85), M. Coltheart (164), S.J. Cooper (82), H.J. Eysenck (813), M.W. Eysenck (90), S.B.G. Eysenck (91), A.F. Furnham (62), H. Giles (70), J.A. Gray (251), D.N. Lee (84), N.J. Mackintosh (176), T.W. Robbins (69), E.T. Rolls (61), J. Sandler (97), H.R. Schaffer (67), C.B. Trevarthan (73), M.R. Trimble (97), P.H. Venables (68), P.B. Warr (120), E.K. Warrington (180), L. Weiskranz (64), G.D. Wilson (84), W. Yule (60)", ','))
no_citations <- as.numeric(gsub(".*?([0-9]+).*", "\\1", citations))
member <- str_trim(gsub(".*?([^0-9(]+).*", "\\1", citations))
df <- data.frame(member, citations)
ggplot(df) +
aes(x = reorder(member, -no_citations), y = no_citations) +
geom_bar(stat = "identity", colour = "black") +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Researcher") + ylab("Number of Citations") +
ggtitle("Number of Citations by Researcher")
install.packages(c("ggplot2", "gridExtra", "tidyverse"))
library(ggplot2)
library(tidyverse)
library(gridExtra)
install.packages('ggplot2', dependencies = T)
install.packages('ggplot2', dependencies = T)
install.packages('tidyverse', dependencies = T)
install.packages('gridExtra', dependencies = T)
